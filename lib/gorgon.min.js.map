{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///gorgon.min.js","webpack:///webpack/bootstrap 8ba2516fe4a1a0c7448d","webpack:///./src/gorgon.js","webpack:///./src/config/config.js","webpack:///./src/config/env.js","webpack:///./src/service/status/index.js","webpack:///./src/component/routes.js","webpack:///./src/service/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_config","_env","_index","Gorgon","GorgonConfig","GorgonEnv","GorgonContainerService","value","service","forEach","console","log","namespace","add","GorgonServer","initServer","data","name","version","load","server","cli","services","debug","enable","_interopRequireDefault","obj","__esModule","default","undefined","_index2","sid","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_routes","StatusService","_GorgonService","_this","getPrototypeOf","description","type","router","Routes","ports","permissions","routes","ServiceRequest","inboundTypes","method","callback","serviceRequest","GorgonService","_toConsumableArray","arr","Array","isArray","arr2","from","serviceName","routeCallbacks","permissionMap","push","pos","indexOf","keyPos","splice","hasOwnProperty","inboundType","payload","_routeCallbacks","apply","concat","containers","containerMap"],"mappings":"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","file":"gorgon.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gorgon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gorgon\"] = factory();\n\telse\n\t\troot[\"gorgon\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gorgon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gorgon\"] = factory();\n\telse\n\t\troot[\"gorgon\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\n\torgon the scripting capable network server for Node JS\r\n\tr\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @package Gorgon\r\n\tauthor Ryan Rentfro\r\n\tlicense MIT\r\n\turl https://github.com/manufacturing-industry\r\n\tn\t\n\t/*\r\n\t * Imports\r\n\t */\n\t\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _env = __webpack_require__(2);\n\t\n\tvar _index = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * The Gorgon main class\r\n\t */\n\tvar Gorgon = function () {\n\t    function Gorgon() {\n\t        _classCallCheck(this, Gorgon);\n\t\n\t        this.GorgonConfig = new _config.GorgonConfig();\n\t        this.GorgonEnv = new _env.GorgonEnv();\n\t        this.GorgonContainerService = new _index.GorgonContainerService();\n\t    }\n\t\n\t    _createClass(Gorgon, [{\n\t        key: \"initServer\",\n\t        value: function initServer() {\n\t            this.GorgonEnv.service.forEach(function (value) {\n\t                console.log('Load Service');\n\t                console.log(value.namespace);\n\t                this.GorgonContainerService.add(value.service);\n\t                console.log(value.namespace + ' was added as a service');\n\t            }, this);\n\t        }\n\t    }]);\n\t\n\t    return Gorgon;\n\t}();\n\t\n\t/*\r\n\t * Run Gorgon Server\r\n\t */\n\t\n\t\n\tvar GorgonServer = new Gorgon();\n\tGorgonServer.initServer();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * Gorgon the scripting capable network server for Node JS\r\n\t *\r\n\t * @package Gorgon\r\n\t * @author Ryan Rentfro\r\n\t * @license MIT\r\n\t * @url https://github.com/manufacturing-industry\r\n\t */\n\t\n\t/**\r\n\t * The Gorgon config class\r\n\t */\n\tvar GorgonConfig = exports.GorgonConfig = function GorgonConfig() {\n\t    _classCallCheck(this, GorgonConfig);\n\t\n\t    this.data = {\n\t        name: 'Gorgon Server',\n\t        version: '0.0.1'\n\t    };\n\t\n\t    this.load = {\n\t        server: true,\n\t        cli: true,\n\t        services: true\n\t    };\n\t\n\t    this.debug = {\n\t        enable: true\n\t    };\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.GorgonEnv = undefined;\n\t\n\tvar _index = __webpack_require__(3);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\r\n\t                                                                                                                                                           * Gorgon the scripting capable network server for Node JS\r\n\t                                                                                                                                                           *\r\n\t                                                                                                                                                           * @package Gorgon\r\n\t                                                                                                                                                           * @author Ryan Rentfro\r\n\t                                                                                                                                                           * @license MIT\r\n\t                                                                                                                                                           * @url https://github.com/manufacturing-industry\r\n\t                                                                                                                                                           */\n\t\n\t/**\r\n\t * The Gorgon env class\r\n\t */\n\tvar GorgonEnv = exports.GorgonEnv = function GorgonEnv() {\n\t    _classCallCheck(this, GorgonEnv);\n\t\n\t    this.service = new _index2.default();\n\t    this.service = [{\n\t        sid: 0,\n\t        name: 'Status',\n\t        namespace: 'StatusService',\n\t        enable: true,\n\t        service: this.service }];\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _routes = __webpack_require__(4);\n\t\n\tvar _index = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Gorgon the scripting capable network server for Node JS\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @package Gorgon\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Ryan Rentfro\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license MIT\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @url https://github.com/manufacturing-industry\r\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar StatusService = function (_GorgonService) {\n\t    _inherits(StatusService, _GorgonService);\n\t\n\t    function StatusService() {\n\t        _classCallCheck(this, StatusService);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(StatusService).call(this));\n\t\n\t        _this.name = 'Status';\n\t        _this.description = 'Provides service status';\n\t        _this.type = 'Service';\n\t        _this.router = new _routes.Routes(_this.name);\n\t        _this.ports = [2600];\n\t        _this.permissions = ['internal'];\n\t        _this.router.import(_this.routes());\n\t        return _this;\n\t    }\n\t\n\t    _createClass(StatusService, [{\n\t        key: 'routes',\n\t        value: function routes() {\n\t            return {\n\t                'ServiceRequest': {\n\t                    inboundTypes: ['rest', 'socket', 'http', 'webSocket', 'api'],\n\t                    method: '/StatusServiceRequest',\n\t                    callback: this.serviceRequest()\n\t                }\n\t            };\n\t        }\n\t    }, {\n\t        key: 'serviceRequest',\n\t        value: function serviceRequest() {}\n\t    }, {\n\t        key: 'page_Index',\n\t        value: function page_Index() {}\n\t    }, {\n\t        key: 'page_Services',\n\t        value: function page_Services() {}\n\t    }]);\n\t\n\t    return StatusService;\n\t}(_index.GorgonService);\n\t\n\texports.default = StatusService;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * Gorgon the scripting capable network server for Node JS\r\n\t *\r\n\t * @package Gorgon\r\n\t * @author Ryan Rentfro\r\n\t * @license MIT\r\n\t * @url https://github.com/manufacturing-industry\r\n\t */\n\t\n\tvar Routes = exports.Routes = function () {\n\t    function Routes(serviceName) {\n\t        _classCallCheck(this, Routes);\n\t\n\t        this.service = serviceName;\n\t        this.inboundTypes = ['rest', 'socket', 'http', 'https', 'webSocket', 'api'];\n\t        this.routes = [];\n\t        this.routeCallbacks = [];\n\t        this.permissionMap = [];\n\t    }\n\t\n\t    _createClass(Routes, [{\n\t        key: 'add',\n\t        value: function add(inboundTypes, method, callback) {\n\t            this.routes.push(method);\n\t            this.routeCallbacks(callback);\n\t            var pos = this.routeCallbacks.length - 1;\n\t\n\t            inboundTypes.forEach(function (value) {\n\t                if (this.inboundTypes.indexOf(value) > -1) this.permissionMap[value].push(pos);else console.log('ERROR - Invalid Permission Encountered in Service: [' + this.service + '] Method: [' + method + ']');\n\t            });\n\t        }\n\t    }, {\n\t        key: 'remove',\n\t        value: function remove(method) {\n\t            var pos = this.routes.indexOf(method);\n\t            if (pos > -1) {\n\t                this.routeCallbacks[pos] = null;\n\t                this.routes[pos] = null;\n\t\n\t                this.inboundTypes.forEach(function (value) {\n\t                    if (this.permissionMap[value] != undefined && this.permissionMap[value] instanceof Array) {\n\t                        var keyPos = this.permissionMap[value].indexOf(pos);\n\t                        if (keyPos > -1) this.permissionMap[value].splice(keyPos, 1);\n\t                    }\n\t                });\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'import',\n\t        value: function _import(routes) {\n\t            if (routes instanceof Array) {\n\t                for (var key in routes) {\n\t                    if (routes.hasOwnProperty(key)) {\n\t                        this.add(routes[key]['inboundTypes'], routes[key]['method'], routes[key]['callback']);\n\t                    }\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'route',\n\t        value: function route(inboundType, method, payload) {\n\t            var pos = this.routes.indexOf(method);\n\t            if (pos > -1) {\n\t                if (this.permissionMap[inboundType] != undefined && this.permissionMap[inboundType].length > 0 && this.permissionMap[inboundType].indexOf(pos) > -1) {\n\t                    var _routeCallbacks;\n\t\n\t                    //callback exists for method\n\t                    return (_routeCallbacks = this.routeCallbacks)[pos].apply(_routeCallbacks, [method, inboundType].concat(_toConsumableArray(payload)));\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t    }]);\n\n\t    return Routes;\n\t}();\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * Gorgon the scripting capable network server for Node JS\r\n\t *\r\n\t * @package Gorgon\r\n\t * @author Ryan Rentfro\r\n\t * @license MIT\r\n\t * @url https://github.com/manufacturing-industry\r\n\t */\n\t\n\tvar GorgonContainerService = exports.GorgonContainerService = function () {\n\t    function GorgonContainerService() {\n\t        _classCallCheck(this, GorgonContainerService);\n\t\n\t        this.containers = [];\n\t        this.containerMap = [];\n\t        this.name = \"Gorgon Container Service\";\n\t        this.type = \"Service\";\n\t    }\n\t\n\t    _createClass(GorgonContainerService, [{\n\t        key: \"add\",\n\t        value: function add(service) {\n\t            if (service.name != null && service.name != '' && this.containerMap.indexOf(service.name) == -1) {\n\t                this.containers.push(service);\n\t                this.containerMap.push(service.name);\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: \"remove\",\n\t        value: function remove(serviceName) {\n\t            if (this.containerMap.indexOf(serviceName) > -1) {\n\t                var pos = this.containerMap.indexOf(serviceName);\n\t                this.containers.splice(pos, 1);\n\t                this.containerMap.splice(pos, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: \"get\",\n\t        value: function get(serviceName) {\n\t            if (this.containerMap.indexOf(serviceName) > -1) return this.containers[this.containerMap.indexOf(serviceName)];\n\t            return false;\n\t        }\n\t    }]);\n\t\n\t    return GorgonContainerService;\n\t}();\n\t\n\tvar GorgonService = exports.GorgonService = function GorgonService() {\n\t    _classCallCheck(this, GorgonService);\n\t\n\t    this.name = '';\n\t    this.description = '';\n\t    this.type = 'Service';\n\t    this.router = null;\n\t    this.ports = [];\n\t    this.permissions = [];\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** gorgon.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8ba2516fe4a1a0c7448d\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n\r\n/*\r\n * Imports\r\n */\r\nimport {GorgonConfig} from \"config/config\";\r\nimport {GorgonEnv} from \"config/env\";\r\nimport {GorgonContainerService} from 'service/index';\r\n\r\n/**\r\n * The Gorgon main class\r\n */\r\nclass Gorgon {\r\n    constructor()\r\n    {\r\n        this.GorgonConfig = new GorgonConfig();\r\n        this.GorgonEnv = new GorgonEnv();\r\n        this.GorgonContainerService = new GorgonContainerService();\r\n    }\r\n\r\n    initServer()\r\n    {\r\n        this.GorgonEnv.service.forEach(function(value){\r\n            console.log('Load Service');\r\n            console.log(value.namespace);\r\n            this.GorgonContainerService.add(value.service);\r\n            console.log(value.namespace + ' was added as a service');\r\n        }, this);\r\n    }\r\n}\r\n\r\n/*\r\n * Run Gorgon Server\r\n */\r\nvar GorgonServer = new Gorgon();\r\nGorgonServer.initServer();\n\n\n/** WEBPACK FOOTER **\n ** ./src/gorgon.js\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n\r\n/**\r\n * The Gorgon config class\r\n */\r\nexport class GorgonConfig\r\n{\r\n    constructor()\r\n    {\r\n        this.data = {\r\n            name: 'Gorgon Server',\r\n            version: '0.0.1'\r\n        };\r\n\r\n        this.load = {\r\n            server: true,\r\n            cli: true,\r\n            services: true\r\n        };\r\n\r\n        this.debug = {\r\n            enable: true\r\n        };\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/config/config.js\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n\r\nimport StatusService from '../service/status/index'\r\n\r\n/**\r\n * The Gorgon env class\r\n */\r\nexport class GorgonEnv\r\n{\r\n    constructor()\r\n    {\r\n        this.service = new StatusService();\r\n        this.service = [\r\n            {\r\n                sid: 0,\r\n                name: 'Status',\r\n                namespace: 'StatusService',\r\n                enable: true,\r\n                service: this.service }\r\n        ];\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/config/env.js\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n\r\nimport {Routes} from '../../component/routes'\r\nimport {GorgonService} from '../index';\r\n\r\nclass StatusService extends GorgonService {\r\n    constructor()\r\n    {\r\n        super();\r\n        this.name = 'Status';\r\n        this.description = 'Provides service status';\r\n        this.type = 'Service';\r\n        this.router = new Routes(this.name);\r\n        this.ports = [2600];\r\n        this.permissions = ['internal'];\r\n        this.router.import(this.routes());\r\n    }\r\n\r\n    routes()\r\n    {\r\n        return {\r\n            'ServiceRequest':\r\n            {\r\n                inboundTypes: ['rest', 'socket', 'http', 'webSocket', 'api'],\r\n                method: '/StatusServiceRequest',\r\n                callback: this.serviceRequest()\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    serviceRequest()\r\n    {\r\n\r\n    }\r\n\r\n    page_Index()\r\n    {\r\n\r\n    }\r\n\r\n    page_Services()\r\n    {\r\n\r\n    }\r\n}\r\n\r\nexport default StatusService;\n\n\n/** WEBPACK FOOTER **\n ** ./src/service/status/index.js\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n\r\nexport class Routes {\r\n    constructor(serviceName) {\r\n        this.service = serviceName;\r\n        this.inboundTypes = ['rest', 'socket', 'http', 'https', 'webSocket', 'api'];\r\n        this.routes = [];\r\n        this.routeCallbacks = [];\r\n        this.permissionMap = [];\r\n    }\r\n\r\n    add(inboundTypes, method, callback)\r\n    {\r\n        this.routes.push(method);\r\n        this.routeCallbacks(callback);\r\n        var pos = this.routeCallbacks.length - 1;\r\n\r\n        inboundTypes.forEach(function(value){\r\n            if (this.inboundTypes.indexOf(value) > -1) this.permissionMap[value].push(pos);\r\n            else console.log('ERROR - Invalid Permission Encountered in Service: [' + this.service + '] Method: [' + method + ']');\r\n        });\r\n    }\r\n\r\n    remove(method)\r\n    {\r\n        let pos = this.routes.indexOf(method);\r\n        if (pos > -1)\r\n        {\r\n            this.routeCallbacks[pos] = null;\r\n            this.routes[pos] = null;\r\n\r\n            this.inboundTypes.forEach(function(value)\r\n            {\r\n                if (this.permissionMap[value] != undefined && this.permissionMap[value] instanceof Array)\r\n                {\r\n                    let keyPos = this.permissionMap[value].indexOf(pos);\r\n                    if (keyPos > -1) this.permissionMap[value].splice(keyPos, 1);\r\n                }\r\n            });\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    import(routes)\r\n    {\r\n        if (routes instanceof Array)\r\n        {\r\n            for (var key in routes) {\r\n                if (routes.hasOwnProperty(key)) {\r\n                    this.add(routes[key]['inboundTypes'], routes[key]['method'], routes[key]['callback']);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    route(inboundType, method, payload)\r\n    {\r\n        let pos = this.routes.indexOf(method);\r\n        if (pos > -1)\r\n        {\r\n            if (this.permissionMap[inboundType] != undefined && this.permissionMap[inboundType].length > 0 && this.permissionMap[inboundType].indexOf(pos) > -1)\r\n            {\r\n                //callback exists for method\r\n                return this.routeCallbacks[pos](method, inboundType, ...payload);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/component/routes.js\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n\r\nexport class GorgonContainerService {\r\n    constructor() {\r\n        this.containers = [];\r\n        this.containerMap = [];\r\n        this.name = \"Gorgon Container Service\";\r\n        this.type = \"Service\";\r\n    }\r\n\r\n    add(service)\r\n    {\r\n        if (service.name != null && service.name != '' && this.containerMap.indexOf(service.name) == -1)\r\n        {\r\n            this.containers.push(service);\r\n            this.containerMap.push(service.name);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    remove(serviceName)\r\n    {\r\n        if (this.containerMap.indexOf(serviceName) > -1)\r\n        {\r\n            let pos = this.containerMap.indexOf(serviceName);\r\n            this.containers.splice(pos, 1);\r\n            this.containerMap.splice(pos, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get(serviceName)\r\n    {\r\n        if (this.containerMap.indexOf(serviceName) > -1) return this.containers[this.containerMap.indexOf(serviceName)];\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class GorgonService\r\n{\r\n    constructor()\r\n    {\r\n        this.name = '';\r\n        this.description = '';\r\n        this.type = 'Service';\r\n        this.router = null;\r\n        this.ports = [];\r\n        this.permissions = [];\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/service/index.js\n **/"],"sourceRoot":""}