{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///gorgon.min.js","webpack:///webpack/bootstrap a23b5bc8cf0fd7a24755","webpack:///./src/gorgon.js","webpack:///./src/config/config.js","webpack:///./src/config/env.js","webpack:///./src/service/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_config","_env","Gorgon","GorgonConfig","GorgonEnv","console","log","value","service","forEach","namespace","GorgonServer","initServer","data","name","version","load","server","cli","services","debug","enable","sid","GorgonContainerService","containers","containerMap","type","indexOf","push","serviceName","pos","splice","GorgonService","router","ports"],"mappings":"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","file":"gorgon.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gorgon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gorgon\"] = factory();\n\telse\n\t\troot[\"gorgon\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gorgon\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gorgon\"] = factory();\n\telse\n\t\troot[\"gorgon\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\n\torgon the scripting capable network server for Node JS\r\n\tr\n\tpackage Gorgon\r\n\tauthor Ryan Rentfro\r\n\tlicense MIT\r\n\turl https://github.com/manufacturing-industry\r\n\tn\t\n\t/*\r\n\t * Imports\r\n\t */\n\t\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _env = __webpack_require__(2);\n\t\n\tvar _index = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * The Gorgon main class\r\n\t */\n\tvar Gorgon = function () {\n\t    function Gorgon() {\n\t        _classCallCheck(this, Gorgon);\n\t\n\t        this.GorgonConfig = new _config.GorgonConfig();\n\t        this.GorgonEnv = new _env.GorgonEnv();\n\t        console.log(this.GorgonConfig);\n\t        console.log(this.GorgonEnv);\n\t    }\n\t\n\t    _createClass(Gorgon, [{\n\t        key: \"initServer\",\n\t        value: function initServer() {\n\t            this.GorgonEnv.service.forEach(function (value) {\n\t                console.log('Load Service');\n\t                console.log(value.namespace);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Gorgon;\n\t}();\n\t\n\t/*\r\n\t * Run Gorgon Server\r\n\t */\n\t\n\t\n\tvar GorgonServer = new Gorgon();\n\tGorgonServer.initServer();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * Gorgon the scripting capable network server for Node JS\r\n\t *\r\n\t * @package Gorgon\r\n\t * @author Ryan Rentfro\r\n\t * @license MIT\r\n\t * @url https://github.com/manufacturing-industry\r\n\t */\n\t\n\t/**\r\n\t * The Gorgon config class\r\n\t */\n\tvar GorgonConfig = exports.GorgonConfig = function GorgonConfig() {\n\t    _classCallCheck(this, GorgonConfig);\n\t\n\t    this.data = {\n\t        name: 'Gorgon Server',\n\t        version: '0.0.1'\n\t    };\n\t\n\t    this.load = {\n\t        server: true,\n\t        cli: true,\n\t        services: true\n\t    };\n\t\n\t    this.debug = {\n\t        enable: true\n\t    };\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * Gorgon the scripting capable network server for Node JS\r\n\t *\r\n\t * @package Gorgon\r\n\t * @author Ryan Rentfro\r\n\t * @license MIT\r\n\t * @url https://github.com/manufacturing-industry\r\n\t */\n\t\n\t/**\r\n\t * The Gorgon env class\r\n\t */\n\tvar GorgonEnv = exports.GorgonEnv = function GorgonEnv() {\n\t    _classCallCheck(this, GorgonEnv);\n\t\n\t    this.service = [{ sid: 0, name: 'Status', namespace: 'StatusService', enable: true }];\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * Gorgon the scripting capable network server for Node JS\r\n\t *\r\n\t * @package Gorgon\r\n\t * @author Ryan Rentfro\r\n\t * @license MIT\r\n\t * @url https://github.com/manufacturing-industry\r\n\t */\n\t\n\tvar GorgonContainerService = exports.GorgonContainerService = function () {\n\t    function GorgonContainerService() {\n\t        _classCallCheck(this, GorgonContainerService);\n\t\n\t        this.containers = [];\n\t        this.containerMap = [];\n\t        this.name = \"Gorgon Container Service\";\n\t        this.type = \"Service\";\n\t    }\n\t\n\t    _createClass(GorgonContainerService, [{\n\t        key: \"add\",\n\t        value: function add(service) {\n\t            if (service.name != null && service.name != '' && this.containerMap.indexOf(service.name) == -1) {\n\t                this.containers.push(service);\n\t                this.containerMap.push(service.name);\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: \"remove\",\n\t        value: function remove(serviceName) {\n\t            if (this.containerMap.indexOf(serviceName) > -1) {\n\t                var pos = this.containerMap.indexOf(serviceName);\n\t                this.containers.splice(pos, 1);\n\t                this.containerMap.splice(pos, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: \"get\",\n\t        value: function get(serviceName) {\n\t            if (this.containerMap.indexOf(serviceName) > -1) return this.containers[this.containerMap.indexOf(serviceName)];\n\t            return false;\n\t        }\n\t    }]);\n\t\n\t    return GorgonContainerService;\n\t}();\n\t\n\tvar GorgonService = exports.GorgonService = function GorgonService() {\n\t    _classCallCheck(this, GorgonService);\n\t\n\t    this.name = name;\n\t    this.type = 'Service';\n\t    this.router = null;\n\t    this.ports = [];\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** gorgon.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a23b5bc8cf0fd7a24755\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n\r\n/*\r\n * Imports\r\n */\r\nimport {GorgonConfig} from \"config/config\";\r\nimport {GorgonEnv} from \"config/env\";\r\nimport {GorgonContainerServiceLoader} from 'service/index';\r\nimport {GorgonContainerService} from 'service/index';\r\n\r\n/**\r\n * The Gorgon main class\r\n */\r\nclass Gorgon {\r\n    constructor()\r\n    {\r\n        this.GorgonConfig = new GorgonConfig();\r\n        this.GorgonEnv = new GorgonEnv();\r\n        console.log(this.GorgonConfig);\r\n        console.log(this.GorgonEnv);\r\n    }\r\n\r\n    initServer()\r\n    {\r\n        this.GorgonEnv.service.forEach(function(value){\r\n            console.log('Load Service');\r\n            console.log(value.namespace);\r\n        });\r\n    }\r\n}\r\n\r\n/*\r\n * Run Gorgon Server\r\n */\r\nvar GorgonServer = new Gorgon();\r\nGorgonServer.initServer();\n\n\n/** WEBPACK FOOTER **\n ** ./src/gorgon.js\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n\r\n/**\r\n * The Gorgon config class\r\n */\r\nexport class GorgonConfig\r\n{\r\n    constructor()\r\n    {\r\n        this.data = {\r\n            name: 'Gorgon Server',\r\n            version: '0.0.1'\r\n        };\r\n\r\n        this.load = {\r\n            server: true,\r\n            cli: true,\r\n            services: true\r\n        };\r\n\r\n        this.debug = {\r\n            enable: true\r\n        };\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/config/config.js\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n\r\n/**\r\n * The Gorgon env class\r\n */\r\nexport class GorgonEnv\r\n{\r\n    constructor()\r\n    {\r\n        this.service = [\r\n            { sid: 0, name: 'Status', namespace: 'StatusService', enable: true }\r\n        ];\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/config/env.js\n **/","/**\r\n * Gorgon the scripting capable network server for Node JS\r\n *\r\n * @package Gorgon\r\n * @author Ryan Rentfro\r\n * @license MIT\r\n * @url https://github.com/manufacturing-industry\r\n */\r\n    \r\n\r\n\r\nexport class GorgonContainerService {\r\n    constructor() {\r\n        this.containers = [];\r\n        this.containerMap = [];\r\n        this.name = \"Gorgon Container Service\";\r\n        this.type = \"Service\";\r\n    }\r\n\r\n    add(service)\r\n    {\r\n        if (service.name != null && service.name != '' && this.containerMap.indexOf(service.name) == -1)\r\n        {\r\n            this.containers.push(service);\r\n            this.containerMap.push(service.name);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    remove(serviceName)\r\n    {\r\n        if (this.containerMap.indexOf(serviceName) > -1)\r\n        {\r\n            let pos = this.containerMap.indexOf(serviceName);\r\n            this.containers.splice(pos, 1);\r\n            this.containerMap.splice(pos, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get(serviceName)\r\n    {\r\n        if (this.containerMap.indexOf(serviceName) > -1) return this.containers[this.containerMap.indexOf(serviceName)];\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class GorgonService\r\n{\r\n    constructor()\r\n    {\r\n        this.name = name;\r\n        this.type = 'Service';\r\n        this.router = null;\r\n        this.ports = [];\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/service/index.js\n **/"],"sourceRoot":""}